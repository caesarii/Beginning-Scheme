(define length (lambda (x) 
    (define improper-list
        (lambda () 
            (display "Exception")
        )
    )
    (let  f ([h x] [t x] [n 0])
        (if (pair? h)
            (let ([h (cdr h)])
                (if (pair? h)
                    (if (eq? h t)
                        (improper-list)
                        (f (cdr h) (cdr t) (+ n 2)))
                    (if (null? h)
                        (+ n 1)
                        (improper-list))))
                (if (null? h)
                    n
                    improper-list)        
        )
    )
))